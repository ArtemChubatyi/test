{"version":3,"sources":["components/Header/Header.jsx","components/Footer/Footer.jsx","components/UserRow/UserRow.jsx","components/TableHeaderCell/TableHeaderCell.jsx","components/TableUSers/TableUsers.jsx","AppBackend.js","components/AddButton/AddButton.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","props","onSelectChange","limit","onSearchChange","react_default","a","createElement","className","Row","Col","md","Form","Control","as","onChange","event","target","value","defaultValue","Group","controlId","type","placeholder","Footer","onPageChange","page","Button","variant","onClick","UserRow","_React$Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleMode","setState","isEditMode","state","inherits","createClass","key","_this$props","id","name","email","description","deleteUser","React","Component","TableHeaderCell","order","title","arrowUpClassName","classNames","table-header-cell__arrow_active","arrowDownClassName","sortBy","require","TableUsers","apply","arguments","onUpdateButton","cancelAddUserModal","Table","TableHeaderCell_TableHeaderCell_TableHeaderCell","users","c","map","user","index","UserRow_UserRow_UserRow","assign","AppBackend","baseUrl","_ref","_ref$limit","_ref$page","_ref$search","search","fetch","concat","then","response","json","method","headers","Accept","Content-Type","body","JSON","stringify","console","log","Add","_Component","submit","onSave","onInputChange","_event$target","defineProperty","isVisible","onCancel","Modal_default","show","onHide","closeButton","Title","Body","Button_default","App","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","updateUsers","stop","_x","_ref2","_callee2","_context2","_x2","_ref3","_callee3","_context3","_x3","_ref4","_callee4","_context4","backend","delete","sent","_x4","_callee5","_this$state","_context5","get","updateUser","_ref6","_callee6","_context6","update","_x5","sortUsers","_ref7","_callee7","_context7","_x6","onAddUserSave","closeAddUserModal","create","addUserModalVisible","_this2","Header_Header_Header","AddButton_Add","TableUsers_TableUsers","Footer_Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8b58e73c.chunk.js","sourcesContent":["import React from \"react\";\nimport { Form } from 'react-bootstrap'\nimport { Col, Row } from \"react-bootstrap\";\nimport './Header.css'\n\nexport const Header = (props) => {\n    const { onSelectChange, limit, onSearchChange } = props;\n    return (\n        <header>\n            <div className=\"header-container\">\n                <div className=\"header__select\">\n                    <Row>\n                        <Col md={4}>\n                            <Form.Control as=\"select\"\n                                onChange={(event) => onSelectChange(event.target.value)}\n                                defaultValue={limit}\n                                className=\"footer_select\" >\n                                <option>5</option>\n                                <option>10</option>\n                                <option>15</option>\n                            </Form.Control>\n                        </Col>\n\n                    </Row>\n                </div>\n                <div className=\"header__input\">\n                    <Form.Group controlId=\"exampleForm.ControlInput1\">\n                        <Form.Control type=\"email\" placeholder=\"Search\"\n                            onChange={(event) => onSearchChange(event.target.value)} >\n                        </Form.Control>\n                    </Form.Group>\n                </div>\n\n            </div>\n\n        </header>\n    )\n}","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\n\r\nimport './Footer.css';\r\n\r\nexport const Footer = (props) => {\r\n  const { onPageChange, page } = props;\r\n  return (\r\n    <footer>\r\n      <div className=\"footer__button\">\r\n        <Button className=\"priv\" variant=\"secondary\" onClick={(event) => onPageChange(page - 1)}>Privious</Button>\r\n        <Button className=\"next\"  variant=\"warning\" onClick={(event) => onPageChange(page + 1)}>Next</Button>\r\n      </div>\r\n  \r\n    </footer>\r\n\r\n  )\r\n};","import React from 'react';\nimport { Button } from \"react-bootstrap\";\nimport './UserRow.css'\n\nexport class UserRow extends React.Component {\n   \n    constructor(props) {\n        super(props);\n        this.state = {\n            isEditMode: false\n        };\n    }\n\n    toggleMode = () => {\n        this.setState({\n            isEditMode: !this.state.isEditMode\n        });\n    };\n\n    \n    //  submiit = () => {\n    //      this.props.onSave({\n    //          name: this.state.name,\n    //          email: this.state.email,\n    //          description: this.state.description\n    //      });\n    //  }\n\n    //  onInputChange = (event) => {\n    //      const { name, value } = event.target;\n    //      this.setState(\n    //          {\n    //              [name]: value\n    //          }\n    //      );\n    //  }\n\n    render() {\n        const { id, name, email, description, deleteUser/*, onCancel, isEditMode>*/} = this.props;\n        const { isEditMode } = this.state;\n\n        return (\n            <tr>\n                <td className=\"user-row__id\">{id}</td>\n                <td className=\"user-row__name\">{isEditMode ? <input type=\"text\" value={this.state.name} /> : name}</td>\n                <td className=\"user-row__email\">{isEditMode ? <input type=\"text\" value={this.state.email} /> : email}</td>\n                <td className=\"user-row__descr\">{isEditMode ? <input type=\"text\" value={this.state.description}  /> : description}</td>\n\n                <td className=\"user-row__button\">\n                    {isEditMode ? (\n                        <Button variant=\"success\" onClick={this.toggleMode}>Save</Button>) : (\n                            <Button variant=\"light\" onClick={this.toggleMode}  >Update</Button>\n                        )}\n                </td>\n                <td className=\"user-row__delete\">\n                    <Button variant=\"danger\" onClick={(event) => deleteUser(id)}>Delete</Button>\n                </td>\n            </tr>\n        );\n    }\n}\n\n\n\n","import React from 'react';\nimport './TableHeaderCell.css'\nimport * as classNames from 'classnames';\n\nexport const TableHeaderCell = (props) => {\n\n   \n\n    const { order, title } = props;\n    let arrowUpClassName = classNames(\n        'fa',\n        'fa-sort-up',\n        'table-header-cell__arrow',\n        {\n            'table-header-cell__arrow_active': order === 'asc'\n        });\n\n    let arrowDownClassName = classNames('fas fa-sort-down table-header-cell__arrow', {\n        'table-header-cell__arrow_active': order === 'desc'\n    });\n\n\n\n\n    return (\n        <td>\n            <div className=\"table-header-cell\">\n                <span className=\"table-header-cell__title\">{title}</span>\n                <div className=\"table-header-cell__arows\">\n                    <i className={arrowUpClassName} />\n                    <i className={arrowDownClassName} />\n                </div>\n            </div>\n        </td>\n\n    );\n  \n\n};","import React from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport { UserRow } from \"../UserRow/UserRow\";\nimport './TableUser.css'\nimport { TableHeaderCell } from \"../TableHeaderCell/TableHeaderCell\";\nconst sortBy = require('lodash/sortBy');\n\n\nexport class TableUsers extends React.Component {\n    render() {\n        const { deleteUser,onUpdateButton,cancelAddUserModal } = this.props;\n\n        return (\n            <div className=\"container\">\n                <Table variant=\"dark\">\n                    <thead>\n                        <tr>\n                            <TableHeaderCell title=\"#\" order=\"desc\" />\n                            <TableHeaderCell title=\"Name\" order=\"asc\" />\n                            <TableHeaderCell title=\"Email\" order=\"asc\" />\n                            <TableHeaderCell title=\"Description\" order=\"asc\" />\n                            <td> Actions </td>\n                            <td> Delete </td  >\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            sortBy(this.props.users, c => c.email).map((user, index) => {\n                                return <UserRow {...user}\n                                    key={user.id} deleteUser={deleteUser} /*onSave={onUpdateButton} isEditMode={this.state.isEditMode} onCancel={cancelAddUserModal}*//>\n                            })\n                        }\n                    </tbody>\n                </Table>\n            </div>\n        )\n    }\n\n}\n\n\n","export class AppBackend {\r\n\tconstructor() {\r\n    this.baseUrl =  'https://5bf417c491c25b0013a3b9a2.mockapi.io';\r\n  }\r\n\r\n\tget({limit=5, page=1, search=\"\" }) {\r\n    return fetch(`${this.baseUrl}/users?limit=${limit}&page=${page}&search=${search}?sortBy=createdAt&order=desc`)\r\n      .then((response) => response.json());\r\n\t}\r\n\r\n\tcreate(user) {\r\n\t\treturn fetch(`${this.baseUrl}/users`, {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Accept': 'application/json',\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(user)\r\n\t\t});\r\n\t}\r\n\tdelete(id) {\r\n\t\tconsole.log(id);\r\n\t\treturn fetch(`${this.baseUrl}/users/${id}`, {\r\n\t\t\tmethod: 'delete',\r\n\t\t\theaders: {\r\n\t\t\t\t'Accept': 'application/json',\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\r\n\tupdate(user) {\r\n\t\treturn fetch(`${this.baseUrl}/users/${user.id}`, {\r\n\t\t\t\tmethod: 'PUT',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\t'Accept': 'application/json',\r\n\t\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify(user)\r\n\t\t});\r\n}\r\n}\r\n\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { Form } from 'react-bootstrap'\r\nimport './AddButton.css'\r\nexport class Add extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: '',\r\n      email: ''\r\n    };\r\n  }\r\n  submit = () => {\r\n    this.props.onSave({\r\n      name: this.state.name,\r\n      email: this.state.email,\r\n      description: this.state.description\r\n    });\r\n  }\r\n\r\n  onInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState(\r\n      {\r\n        [name]: value\r\n      }\r\n    );\r\n  }\r\n  render() {\r\n\r\n    const { isVisible, onCancel } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"add__button\">\r\n\r\n\r\n          <Modal show={isVisible} onHide={onCancel}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Add information about user</Modal.Title>\r\n            </Modal.Header>\r\n\r\n            <Modal.Body>\r\n              <Form >\r\n                <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                  <Form.Control type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    value={this.state.name}\r\n                    onChange={this.onInputChange}>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                  <Form.Control type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.onInputChange}>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                  <Form.Control type=\"text\"\r\n                    placeholder=\"Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onInputChange}>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n              </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"danger\" onClick={onCancel}>\r\n                Close\r\n              </Button>\r\n              <Button variant=\"success\" onClick={this.submit}>\r\n                Save User\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Header } from \"./components/Header/Header\";\nimport { Footer } from \"./components/Footer/Footer\";\nimport { TableUsers } from \"./components/TableUSers/TableUsers\";\nimport { AppBackend } from \"./AppBackend\"\nimport { Add } from \"./components/AddButton/AddButton\";\nimport Button from 'react-bootstrap/Button'\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            users: [],\n            limit: 15,\n            search: '',\n            page: 1\n        };\n        this.backend = new AppBackend();\n    }\n    componentDidMount() {\n        this.updateUsers();\n    }\n    onSelectChange = async (limit) => {\n        this.setState({ limit }, () => {\n            this.updateUsers();\n        });\n    };\n\n    onSearchChange = async (search) => {\n\n        this.setState({ search }, () => {\n            this.updateUsers();\n        });\n\n    };\n    onPageChange = async (page) => {\n\n        this.setState({ page }, () => {\n            this.updateUsers();\n        });\n\n    }\n\n    deleteUser = async (id) => {\n        const users = await this.backend.delete(id);\n        this.setState({\n            users\n        });\n        this.updateUsers();\n\n    };\n\n\n    updateUsers = async () => {\n        const { limit, search, page } = this.state;\n        const users = await this.backend.get({\n            limit,\n            search,\n            page\n\n        });\n        this.setState({\n            users\n        });\n    };\n\n    updateUser = async (user) => {\n\n        const users = await this.backend.update(\n            user\n        );\n        this.setState({\n            users\n        });\n\n    };\n    sortUsers = async (user) => {\n\n        const users = await this.backend.update(\n            user\n        );\n        this.setState({\n            users\n        });\n\n    };\n    onAddUserSave = (user) => {\n        this.closeAddUserModal();\n        this.backend.create(user);\n    }\n    closeAddUserModal = () => {\n        this.setState({ addUserModalVisible: false });\n    };\n\n\n    /* \n     onUpdateButton = (user) => {\n         this.cancelAddUserModal();\n         this.backend.update(user);\n     }\n     cancelAddUserModal = () => {\n         this.setState({\n             isEditMode: !this.state.isEditMode\n         });\n     };\n     */\n\n\n    render() {\n\n        return (\n            <div className=\"wrapp\">\n                <Header onSelectChange={this.onSelectChange} limit={this.state.limit} onSearchChange={this.onSearchChange} />\n                <Button variant=\"primary\" className=\"add-button\" onClick={() => this.setState({ addUserModalVisible: true })}>\n                    Add User\n                </Button>\n                <Add onSave={this.onAddUserSave} onCancel={this.closeAddUserModal} isVisible={this.state.addUserModalVisible} />\n                <TableUsers users={this.state.users} deleteUser={this.deleteUser} id={this.state.id} /*onSave={this.onUpdateButton} onCancel={this.cancelAddUserModal} isEditMode={this.state.isEditMode} *//>\n                <Footer onPageChange={this.onPageChange} page={this.state.page} />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}